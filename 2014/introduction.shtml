<!--#set var="title" value="Introduction"
--><!--#include virtual="smt-comp-prelude.shtml" -->

<p>
<b>Decision procedures.</b> Decision procedures for satisfiability
modulo theories (SMT) are of continuing interest for many verification
applications.  SMT solvers are typically used for verification as
backends: a verification problem or subproblem is translated into an
SMT formula and submitted to the SMT solver.  The solver then attempts
to report satisfiability or unsatisfiability of the formula.  The
advantage SMT solvers are usually considered to have over pure SAT
solvers, which are also often used as verification backends (e.g., for
bounded model checking), is the higher level of abstraction at which
they can operate.  By implementing theories like arithmetic, arrays,
and uninterpreted functions directly, SMT solvers have the promise to
provide higher performance than SAT solvers working on encodings of
such structures to the bit level.
</p>

<p>
<b>Standard formats.</b> The additional promise of SMT over pure SAT
is balanced by additional challenges.  Since SMT deals with
first-order (most commonly quantifier-free) formulas instead of purely
propositional ones, creation and widespread adoption of a common input
language is more difficult than for SAT.  It is furthermore more
important, since the more expressive setting of SMT potentially allows
more room for variation in the exact details of the logic (e.g.,
sorted or unsorted, total or partial functions, etc.).  Hence,
translations between input formats of different tools are more
complex, and in some cases it may even not be clear what such a
translation should be.  This makes the issue of input format critical.
For combination with other tools like skeptical proof assistants
(requiring a proof of every theorem validated by an external tool),
common output formats for objects like proofs and models are also
necessary for the adoption of SMT.
</p>

<p>
<b> Competition.</b> The Satisfiability Modulo Theories Competition
(SMT-COMP) arose from the <a
href="http://www.smtlib.org/">SMT-LIB</a>
(``Satisfiability Modulo Theories Library'') initiative to spur
adoption of the common, community-designed SMT-LIB formats, and to
spark further advances in SMT, especially for verification.
Competitions in other automated reasoning fields, such as <a
href="http://www.cs.miami.edu/~tptp/CASC/">CASC</a> and the <a
href="http://www.satcompetition.org/">SAT competition</a>, have helped
inspire continuing improvements in tools from year to year.  The first
SMT-COMP was held in 2005 as a satellite event of the <a
href="http://www.cav2005.inf.ed.ac.uk/">17th International Conference
on Computer-Aided Verification (CAV)</a>.  The experience with
SMT-COMP 2005 confirmed the community's expectations that a public
competition would indeed motivate implementors of SMT solvers to adopt
the common SMT-LIB input format.  Subsequent SMT-COMPs, held as
satellite events of
<a href="http://www.easychair.org/FLoC-06/CAV.html">CAV 2006</a>,
<a href="http://www.cav2007.org/">CAV 2007</a>, 
<a href="http://www.princeton.edu/cav2008/">CAV 2008</a>, 
<a href="http://complogic.cs.mcgill.ca/cade22/">CADE-22</a>, 
<a href="http://www.floc-conference.org/CAV-home.html">CAV 2010</a>, 
<a href="http://www.cs.utah.edu/events/conferences/cav2011/">CAV 2011</a>, and
<a href="http://ijcar.cs.manchester.ac.uk/">IJCAR 2012</a>
have
provided further evidence that such a competition can stimulate
improvement in solver implementations: solvers entered in each competition
have improved significantly over those in previous competitions.
[In 2013, an <a href="http://www.smtcomp.org/2013">evaluation</a> was conducted, rather than a competition. ]
</p>

<!--#include virtual="smt-comp-postlude.shtml" -->
